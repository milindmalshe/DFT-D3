%function [E_disp, S] = Milind_DFT_D3(S)
function [E_disp, S] = DFT_D3()

% Number of elements for which DFT-D3 was parameterized
NumElements = 94;

% Coordination number - number of reference systems considered for 2-D
% interpolation
CoordinationNum_ref_max = 5;

Damping = 0;

numAtoms = 2;

% Steepness parameters alpha
alpha6 = 14;
alpha8 = alpha6 + 2; %16;
alpha = [alpha6, alpha8];

k1 = 16.0;
k2 = 4.0/3.0;
k3 = -4.0;

 
[CN_A_Num, ElementType] = CoordinationStaeReference_CN();
[CN_A] = CoordinationNumbers_CN();
[r2_r4] = r_cut();

% R_Acov = Sclaed covalent radius of atom A
[R_cov] = rcov();

if (Damping ==0)
% Stefan Grimme Zero Damping
    Damp=0;
elseif (Damping == 1)
% Use Becke-Johnson Damping
    Damp = 1; 
end

[RS6,S18,RS18,S6] = D3_DampingParam(Damp);




% CN_A = Fractional Coordination Number 
CN_A = [];

[c6_AB] = c6();
num_atoms=1;

r = 1;

E_disp = 0;
E2 = 0;
E3 = 0;

% Global (density functional dependent) scaling factors Sn
% Sn are adjusted only for n>6 to ensure aymptotic exactness: S6 = 1;
% Sn = [1,0,8];
% S6 = Sn(1,1);
% S7 = Sn(1,2);
% S8 = Sn(1,3);
s6 = 1;
s7 = 0;
s8 = 0.5;
scaling_fact = [s6, s7, s8];

% n-th order dispersion coefficients
% higher-order dispersion coefficients are computed recursively
C6 = 1;
C8 = 1;
C9 = 1;
disp_coeff = [C6, C8];


%Order-dependent scaling factor of the cut-off radii R_cutOff
Sr8 = 1;
Sr7 = 0;
Sr6 = 1; % $$$$ CHECK VALUE OF S_r6


% Order dependenet scaling factor of cutoff radii Srn

Srn = [Sr6, Sr7, Sr8];

% Compute E2
% E2 = -0.5;
r = [1, 1; 1, 1];

for i= 1:numAtoms
    for j= 1:numAtoms
        if(j ~= i)
            % Compute damping function fd,n 
            % Equation 4 in Grimme paper 
            CC6(i,j)= 0.5.*C6;
            
            
            fd6= 1+ 6.*((r(i,j)./(Sr6.*r(i,j))).^(-alpha6));
            fd6= 1./fd6;

            fd8= 1+ 6.*((r(i,j)./(Sr8.*r(i,j))).^(-alpha8));
            fd8= 1./fd8;
            
            
            Dfd6Dr= ((fd6).^(-alpha6-1)).*(6./Sr6).^(-alpha6);
            Dfd8Dr= ((fd8).^(-alpha8-1)).*(6./Sr8).^(-alpha8);
            

            E26 = (s6.*(C6./r(i,j).^6).*fd6);
            E28 = (s8.*(C8./r(i,j).^8).*fd8); 
        
            E2 = E26+E28;
            
            DE2Dr= Dfd6Dr + Dfd8Dr;            
                    
            
        end
        
    end
    
end


for i= 1:numAtoms
    for j= 1:numAtoms
        for k=1:numAtoms
            if((k == i) & (k == j) & (j == i))
                CC9(i,j,k)= sqrt(CC6(i,j).*CC6(i,k).*CC6(j,k));
                
%                 DCC9Dr(i,j,k)= 1./sqrt(CC9(i,j,k));
                E3= (s6.*(C6./r(i,j).^6)) + C9;
                DE3Dr= Dfd6Dr + Dfd8Dr + C9;
            end            
        end
    end
end




[CN_A] = CN(numAtoms, k1, k2, R_cov, r);


E_disp = E2 + E3;


n_disp_coeff= [6,8];
num_disp_coeff = size(n_disp_coeff,2);

% % damping_func = 1/(1+6*(r/(SSR_cutOff) )^(-alpha) );

%E2


%%*************************************************************************
%%
function [CN_A_Num, ElementType] = CoordinationStaeReference_CN()

CN_A_Num = [2, 1, 2, 3, 5, 5, 4, 3, 2, 1, 2, 3, 4, 5, 4, 3, 2, 1, 2, 3, ...
3, 3, 3, 3, 3, 3, 4, 4, 2, 2, 4, 5, 4, 3, 2, 1, 2, 3, 3, 3, 3, 3, 3, 3, ...
3, 3, 2, 2, 4, 5, 4, 3, 2, 1, 2, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...
2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 4, 5, 4, 3, 2, 1, 2, 3, 2, 2, 2, 2, ...
2, 2];


ElementType = { 'H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne', ...
 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca', 'Sc', 'Ti', ...
 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', ...
 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', ...
 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', ...
 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',...
 'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', ...
 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu'};

% size (CN_A_Num);
% size (ElementType);

%%

%%*************************************************************************
%%
function [CN_A] = CoordinationNumbers_CN()

CN_A =     [0.9118	0	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9865	0	0	 0.0000;
    0.0000	0.9808	1.9697	0	 0.0000;
    0.0000	0.9706	1.9441	2.9128	 4.5856;
    0.0000	0.9868	1.9985	2.9987	 3.9844;
    0.0000	0.9944	2.0143	2.9903	 0.0000;
    0.0000	0.9925	1.9887	0	 0.0000;
    0.0000	0.9982	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9684	0	0	 0.0000;
    0.0000	0.9628	1.9496	0	 0.0000;
    0.0000	0.9648	1.9311	2.9146	 0.0000;
    0.0000	0.9507	1.9435	2.9407	 3.8677;
    0.0000	0.9947	2.0102	2.9859	 0.0000;
    0.0000	0.9948	1.9903	0	 0.0000;
    0.0000	0.9972	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9767	0	0	 0.0000;
    0.0000	0.9831	1.9349	0	 0.0000;
    0.0000	1.8627	2.8999	0	 0.0000;
    0.0000	1.8299	3.8675	0	 0.0000;
    0.0000	1.9138	2.911	0	 0.0000;
    0.0000	1.8269	10.6191	0	 0.0000;
    0.0000	1.6406	9.8849	0	 0.0000;
    0.0000	1.6483	9.1376	0	 0.0000;
    0.0000	1.7149	2.9263	7.7785	 0.0000;
    0.0000	1.7937	6.5458	6.2918	 0.0000;
    0.0000	0.9576	0	0	 0.0000;
    0.0000	1.9419	0	0	 0.0000;
    0.0000	0.9601	1.9315	2.9233	 0.0000;
    0.0000	0.9434	1.9447	2.9186	 3.8972;
    0.0000	0.9889	1.9793	2.9709	 0.0000;
    0.0000	0.9901	1.9812	0	 0.0000;
    0.0000	0.9974	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9738	0	0	 0.0000;
    0.0000	0.9801	1.9143	0	 0.0000;
    0.0000	1.9153	2.8903	0	 0.0000;
    0.0000	1.9355	3.9106	0	 0.0000;
    0.0000	1.9545	2.9225	0	 0.0000;
    0.0000	1.942	11.0556	0	 0.0000;
    0.0000	1.6682	9.5402	0	 0.0000;
    0.0000	1.8584	8.8895	0	 0.0000;
    0.0000	1.9003	2.9696	0	 0.0000;
    0.0000	1.863	5.7095	0	 0.0000;
    0.0000	0.9679	0	0	 0.0000;
    0.0000	1.9539	0	0	 0.0000;
    0.0000	0.9633	1.9378	2.9353	 0.0000;
    0.0000	0.9514	1.9505	2.9259	 3.9123;
    0.0000	0.9749	1.9523	2.9315	 0.0000;
    0.0000	0.9811	1.9639	0	 0.0000;
    0.0000	0.9968	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9909	0	0	 0.0000;
    0.0000	0.9797	1.8467	0	 0.0000;
    0.0000	1.9373	2.9175	0	 0.0000;
    2.7991	0	0	0	 0.0000;
    0.0000	2.9425	0	0	 0.0000;
    0.0000	2.9455	0	0	 0.0000;
    0.0000	2.9413	0	0	 0.0000;
    0.0000	2.93	0	0	 0.0000;
    0.0000	1.8286	0	0	 0.0000;
    0.0000	2.8732	0	0	 0.0000;
    0.0000	2.9086	0	0	 0.0000;
    0.0000	2.8965	0	0	 0.0000;
    0.0000	2.9242	0	0	 0.0000;
    0.0000	2.9282	0	0	 0.0000;
    0.0000	2.9246	0	0	 0.0000;
    0.0000	2.8482	0	0	 0.0000;
    0.0000	2.9219	0	0	 0.0000;
    0.0000	1.9254	3.884	0	 0.0000;
    0.0000	1.9459	2.8988	0	 0.0000;
    0.0000	1.9292	10.9153	0	 0.0000;
    0.0000	1.8104	9.8054	0	 0.0000;
    0.0000	1.8858	9.1527	0	 0.0000;
    0.0000	1.8648	2.9424	0	 0.0000;
    0.0000	1.9188	6.6669	0	 0.0000;
    0.0000	0.9846	0	0	 0.0000;
    0.0000	1.9896	0	0	 0.0000;
    0.0000	0.9267	1.9302	2.942	 0.0000;
    0.0000	0.9383	1.9356	2.9081	 3.9098;
    0.0000	0.982	1.9655	2.95	 0.0000;
    0.0000	0.9815	1.9639	0	 0.0000;
    0.0000	0.9954	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9705	0	0	 0.0000;
    0.0000	0.9662	1.8075	0	 0.0000;
    0.0000	2.907	0	0	 0.0000;
    0.0000	2.8844	0	0	 0.0000;
    0.0000	2.8738	0	0	 0.0000;
    0.0000	2.8878	0	0	 0.0000;
    0.0000	2.9095	0	0	 0.0000;
    0.0000	1.9209	0	0	 0.0000;
    ];
				
%%

%%*************************************************************************
%%
function [r2_r4] = r_cut()

r2_r4 = [2.00734898, 1.56637132, 5.01986934, 3.85379032, 3.64446594, ...
3.10492822, 2.71175247, 2.5936168, 2.3882525, 2.21522516, 6.58585536, ...
5.46295967, 5.65216669, 4.88284902, 4.29727576, 4.04108902, 3.72932356, ...
3.44677275, 7.97762753, 7.07623947, 6.60844053, 6.28791364, 6.07728703, ...
5.54643096, 5.80491167, 5.58415602, 5.41374528, 5.28497229, 5.22592821, ...
5.09817141, 6.12149689, 5.54083734, 5.06696878, 4.87005108, 4.59089647, ...
4.31176304, 9.55461698, 8.67396077, 7.97210197, 7.43439917, 6.58711862, ...
6.19536215, 6.0151729, 5.8162341, 5.65710424, 5.52640661, 5.44263305, ...
5.58285373, 7.02081898, 6.46815523, 5.9808912 ,5.81686657, 5.53321815, ...
5.25477007, 11.02204549, 10.15679528, 9.35167836, 9.06926079, ...
8.97241155, 8.90092807, 8.8598484, 8.81736827, 8.7931771, 7.89969626, ...
8.80588454, 8.42439218, 8.54289262, 8.4758337, 8.45090888, 8.47339339, ...
7.83525634, 8.20702843, 7.70559063, 7.32755997, 7.03887381, 6.6897872, ...
6.05450052, 5.88752022, 5.70661499, 5.78450695, 7.79780729, 7.26443867, ...
6.78151984, 6.67883169, 6.39024318, 6.09527958, 11.79156076, ...
11.10997644, 9.51377795, 8.67197068, 8.77140725, 8.65402716, 8.53923501,...
8.85024712];

%

%%

%%*************************************************************************

%%
function [r_cov] = rcov()

r_cov = [0.80628308, 1.15903197, 3.02356173, 2.36845659, 1.94011865, ...
1.88972601, 1.78894056, 1.58736983, 1.61256616, 1.68815527, 3.52748848, ...
3.14954334, 2.84718717, 2.62041997, 2.7715982, 2.57002732, 2.49443835, ...
2.41884923, 4.434557, 3.8802373, 3.35111422, 3.07395437, 3.04875805, ...
2.7715982, 2.69600923, 2.62041997, 2.51963467, 2.49443835, 2.544831, ...
2.74640188, 2.82199085, 2.74640188, 2.89757982, 2.7715982, 2.87238349, ...
2.94797246, 4.7621095, 4.2077898, 3.70386304, 3.50229216, 3.3259179, ...
3.12434702, 2.89757982, 2.84718717, 2.84718717, 2.72120556, 2.89757982, ...
3.0991507, 3.22513231, 3.17473967, 3.17473967, 3.0991507, 3.3259179, ...
3.30072128, 5.26603625, 4.434557, 4.08180818, 3.70386304, 3.98102289, ...
3.95582657, 3.93062995, 3.90543362, 3.80464833,3.82984466, 3.80464833, ...
3.77945201, 3.75425569, 3.75425569, 3.72905937, 3.85504098,3.67866672, ...
3.45189952, 3.30072128, 3.0991507, 2.97316878, 2.92277614, 2.79679452, ...
2.82199085, 2.84718717, 3.3259179, 3.27552496, 3.27552496, 3.42670319, ...
3.30072128, 3.47709584, 3.57788113, 5.06446567, 4.56053862, 4.2077898, ...
3.98102289, 3.82984466, 3.85504098, 3.8802373, 3.90543362];

%%


%%*************************************************************************

%%
function [RS6,S18,RS18,S6] = D3_DampingParam(Damp)

if (Damp == 0)

    RS6 = [0.999
    1.094
    1.139
    0.892
    0.923
    1.217
    1.345
    1.224
    0.872
    1.166
    1.261
    1.287
    1.129
    1.021
    1.532
    1.252
    1.427
    1.557
    1.586
    1.541
    1.158
    1.239
    1.087
    1.37
    1.223
    1.66
    1.613
    0.929
    0.806
    0.837
    1.215
    1.221
    1.128
    1.176
    0.949
    1.333
    1.605
    1.671
    1.931
    1.378
    1.355
    1.373
    1.417
    1.581
    1.325
    1.619
    1.446
    1.235
    1.221];

    S18 = [-1.957
    1.682
    1.683
    0.909
    1.01
    0.722
    0.612
    0.901
    0.514
    1.105
    1.703
    0.928
    0.109
    0.862
    0.862
    1.242
    1.022
    0.705
    0.76
    0.879
    1.746
    1.098
    2.033
    1.442
    1.219
    0.55
    1.868
    1.975
    1.764
    2.055
    0.663
    0.56
    1.494
    1.775
    0.792
    0.998
    1.118
    1.061
    2.168
    1.217
    1.279
    0.595
    0
    0
    0
    0
    0
    0.673
    1.206];

    RS18 = [0.697
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1];

    S6 = [1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    0.64
    0.82
    0.56
    0.75
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1];

    DFT_FunctionalType = {'slater-dirac-exchange'
        'b-lyp'
        'b-p'
        'b97-d'
        'revpbe'
        'pbe'
        'pbesol'
        'rpw86-pbe'
        'rpbe'
        'tpss'
        'b3-lyp'
        'pbe0'
        'hse06'
        'revpbe38'
        'pw6b95'
        'tpss0'
        'b2-plyp'
        'pwpb95'
        'b2gp-plyp'
        'ptpss'
        'hf'
        'mpwlyp'
        'bpbe'
        'bh-lyp'
        'tpssh'
        'pwb6k'
        'b1b95'
        'bop'
        'o-lyp'
        'o-pbe'
        'ssb'
        'revssb'
        'otpss'
        'b3pw91'
        'revpbe0'
        'pbe38'
        'mpw1b95'
        'mpwb1k'
        'bmk'
        'cam-b3lyp'
        'lc-wpbe'
        'm05'
        'm052x'
        'm06l'
        'm06'
        'm062x'
        'm06hf'
        'dftb3'
        'hcth120'};

end


% size (DFT_FunctionalType);
% size(RS6);


%%