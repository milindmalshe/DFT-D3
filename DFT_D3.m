%function [E_disp, S] = Milind_DFT_D3(S)
function [E_disp, S] = DFT_D3(atoms,Damping,DFT_functionalType)

coord= atoms.coord;
numAtoms = size(atoms.coord,1)
numAtomsType= size(unique(atoms.elementType),1)


% Number of elements for which DFT-D3 was parameterized
NumElements = 94;

% Coordination number - number of reference systems considered for 2-D
% interpolation
CoordinationNum_ref_max = 5;

ElementType = { 'H'; 'He'; 'Li'; 'Be'; 'B'; 'C'; 'N'; 'O'; 'F'; 'Ne'; ...
 'Na'; 'Mg'; 'Al'; 'Si'; 'P'; 'S'; 'Cl'; 'Ar'; 'K'; 'Ca'; 'Sc'; 'Ti'; ...
 'V'; 'Cr'; 'Mn'; 'Fe'; 'Co'; 'Ni'; 'Cu'; 'Zn'; 'Ga'; 'Ge'; 'As'; 'Se'; ...
 'Br'; 'Kr'; 'Rb'; 'Sr'; 'Y'; 'Zr'; 'Nb'; 'Mo'; 'Tc'; 'Ru'; 'Rh'; 'Pd'; ...
 'Ag'; 'Cd'; 'In'; 'Sn'; 'Sb'; 'Te'; 'I'; 'Xe'; 'Cs'; 'Ba'; 'La'; 'Ce'; ...
 'Pr'; 'Nd'; 'Pm'; 'Sm'; 'Eu'; 'Gd'; 'Tb'; 'Dy'; 'Ho'; 'Er'; 'Tm'; 'Yb';...
 'Lu'; 'Hf'; 'Ta'; 'W'; 'Re'; 'Os'; 'Ir'; 'Pt'; 'Au'; 'Hg'; 'Tl'; 'Pb'; ...
 'Bi'; 'Po'; 'At'; 'Rn'; 'Fr'; 'Ra'; 'Ac'; 'Th'; 'Pa'; 'U'; 'Np'; 'Pu'};


for i= 1:numAtoms
    for j= 1:NumElements
        if(atoms.elementType{i} == ElementType{j})
            atoms.type(i,1)=j;
        end
    end
end

% atoms.type= atoms.type';


% Damping = 0;



% Steepness parameters alpha
alpha6 = 14;
alpha8 = alpha6 + 2; %16;
alpha = [alpha6, alpha8];

k1 = 16.0;
k2 = 4.0/3.0;
k3 = -4.0;

 
[CN_Num_ALL, ElementType_ALL] = CN_CoordinationStaeReference();




[CN_ALL] = CN_CoordinationNumbers();
[r2_r4_ALL] = r2_r4_MultipoleExpectation();

% R_Acov = Sclaed covalent radius of atom A
[R_cov_ALL] = rcov_CovalentRadii();

if (Damping ==0)
% Stefan Grimme Zero Damping
    Damp=0;
elseif (Damping == 1)
% Use Becke-Johnson Damping
    Damp = 1; 
end

[RS6,S18,RS18,S6] = D3_DampingParam(Damp,DFT_functionalType);




for i= 1:numAtoms
    CN_Num(i,1)= CN_Num_ALL(atoms.type(i));
    CN(i,:)= CN_ALL(atoms.type(i),:);
    r2_r4_A(i,:)= r2_r4_ALL(atoms.type(i),:);
    R_cov_A(i,:)= R_cov_ALL(atoms.type(i),:);
end

for i=1:numAtoms
    for j= 1:numAtoms
        if(j ~= i)
           R_AB(i,j)= sqrt(sum((atoms.coord(j,:)-atoms.coord(i,:)).^2));
        end
        
    end
end


CN_A= zeros(numAtoms,1);
for i= 1:numAtoms
    for j= 1:numAtoms
        if(j~=i)
            temp= 1./(1+exp(-16.*((4/3.*(R_cov_A(i)+R_cov_A(j))./R_AB(i,j))-1)));
            CN_A(i,1)= CN_A(i,1) + temp;
            %             CN_A(i,1)= CN_A(i,1) + 1./(1+exp(-16.*(4/3.*(R_cov_A(i)+R_cov_A(j))./R_AB(i,j)-1)));
            
        end
    end
    
end



r0_AB= r0_AB_cutOffRadius_atomPair(NumElements);



% % ***********************************************************************
% % ***********************************************************************
% % ***********************************************************************
% % FOLLOWING CODE DOES THE INTERPOLATION OF C6 BETWEEN SUPPORTING POINTS
% % UNCOMMENT THIS PART OF THE CODE ONCE CORRECT C6 VALUES ARE KNOWN
% CN_A_SupportingPoints= zeros(numAtoms,1);
% for i= 1:numAtoms
%     for j= 1:CoordinationNum_ref_max
%         temp= CN_A(i,1)-CN(i,j)
%         CN_A_SupportingPoints(i,1)= (CN_A(i,1)-CN(i,j) ).^2;
%         
%     end
%     
% end
% 
% 
% 
% Lij= 1
% 
% for i=1:numAtoms
%    for j= 1:numAtoms
%       if(j~=i)
%          L(i,j)= (CN_A)
%           
%       end       
%    end
% end
% 
% 
% % CN_A = Fractional Coordination Number 
% CN_A = [];
% 
% [c6_AB] = c6_dispersionCoeff();
% % num_atoms=1;
% 
% 
% % ABOVE CODE DOES THE INTERPOLATION OF C6 BETWEEN SUPPORTING POINTS
% % UNCOMMENT THIS PART OF THE CODE ONCE CORRECT C6 VALUES ARE KNOWN
% % ***********************************************************************
% % ***********************************************************************
% % ***********************************************************************


% r = 1;



E_disp = 0;
E2 = 0;
E3 = 0;

% Global (density functional dependent) scaling factors Sn
% Sn are adjusted only for n>6 to ensure aymptotic exactness: S6 = 1;
% Sn = [1,0,8];
% S6 = Sn(1,1);
% S7 = Sn(1,2);
% S8 = Sn(1,3);
s6 = 1;
s7 = 0;
s8 = 0.5;
scaling_fact = [s6, s7, s8];

% n-th order dispersion coefficients
% higher-order dispersion coefficients are computed recursively
C6 = 1;
C8 = 1;
C9 = 1;
disp_coeff = [C6, C8];


%Order-dependent scaling factor of the cut-off radii R_cutOff
Sr8 = 1;
Sr7 = 0;
Sr6 = 1; % $$$$ CHECK VALUE OF S_r6


% Order dependenet scaling factor of cutoff radii Srn

Srn = [Sr6, Sr7, Sr8];

% Compute E2
% E2 = -0.5;
r = [1, 1; 1, 1];

for i= 1:numAtoms
    for j= 1:numAtoms
        if(j ~= i)
            % Compute damping function fd,n 
            % Equation 4 in Grimme paper 
            CC6(i,j)= 0.5.*C6;
            
            
            fd6= 1+ 6.*((r(i,j)./(Sr6.*r(i,j))).^(-alpha6));
            fd6= 1./fd6;

            fd8= 1+ 6.*((r(i,j)./(Sr8.*r(i,j))).^(-alpha8));
            fd8= 1./fd8;
            
            
            %             Dfd6Dr= ((fd6).^(-alpha6-1)).*(6./Sr6).^(-alpha6);
            %             Dfd8Dr= ((fd8).^(-alpha8-1)).*(6./Sr8).^(-alpha8);
            
            numerator= (6.*alpha6.*(RS6.*r0_AB).^alpha6).*(r(i,j).^(-alpha6-1));
            denominator= (1+(6.*((RS6.*r0_AB).^alpha6).*(r(i,j).^(-alpha6)))).^2;
            Dfd6Dr= (numerator)./(denominator);
            
            numerator= (6.*alpha8.*(r0_AB).^alpha8).*(r(i,j).^(-alpha8-1));
            denominator= (1+(6.*((r0_AB).^alpha8).*(r(i,j).^(-alpha8)))).^2;
            Dfd8Dr= (numerator)./(denominator);
            
            
            E26 = (s6.*(C6./r(i,j).^6).*fd6);
            E28 = (s8.*(C8./r(i,j).^8).*fd8); 
        
            E2 = E26+E28;
            
            DE2Dr= Dfd6Dr + Dfd8Dr;            
                    
            
        end
        
    end
    
end


for i= 1:numAtoms
    for j= 1:numAtoms
        for k=1:numAtoms
            if((k == i) & (k == j) & (j == i))
                CC9(i,j,k)= sqrt(CC6(i,j).*CC6(i,k).*CC6(j,k));
                
%                 DCC9Dr(i,j,k)= 1./sqrt(CC9(i,j,k));
                E3= (s6.*(C6./r(i,j).^6)) + C9;
                DE3Dr= Dfd6Dr + Dfd8Dr + C9;
            end            
        end
    end
end




[CN_A] = CN(numAtoms, k1, k2, R_cov, r);


E_disp = E2 + E3;


n_disp_coeff= [6,8];
num_disp_coeff = size(n_disp_coeff,2);

% % damping_func = 1/(1+6*(r/(SSR_cutOff) )^(-alpha) );

%E2


%%*************************************************************************
%%
function [CN_A_Num, ElementType] = CN_CoordinationStaeReference()

CN_A_Num = [2; 1; 2; 3; 5; 5; 4; 3; 2; 1; 2; 3; 4; 5; 4; 3; 2; 1; 2; 3; ...
3; 3; 3; 3; 3; 3; 4; 4; 2; 2; 4; 5; 4; 3; 2; 1; 2; 3; 3; 3; 3; 3; 3; 3; ...
3; 3; 2; 2; 4; 5; 4; 3; 2; 1; 2; 3; 3; 1; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; ...
2; 2; 2; 3; 3; 3; 3; 3; 3; 3; 2; 2; 4; 5; 4; 3; 2; 1; 2; 3; 2; 2; 2; 2; ...
2; 2];


ElementType = { 'H'; 'He'; 'Li'; 'Be'; 'B'; 'C'; 'N'; 'O'; 'F'; 'Ne'; ...
 'Na'; 'Mg'; 'Al'; 'Si'; 'P'; 'S'; 'Cl'; 'Ar'; 'K'; 'Ca'; 'Sc'; 'Ti'; ...
 'V'; 'Cr'; 'Mn'; 'Fe'; 'Co'; 'Ni'; 'Cu'; 'Zn'; 'Ga'; 'Ge'; 'As'; 'Se'; ...
 'Br'; 'Kr'; 'Rb'; 'Sr'; 'Y'; 'Zr'; 'Nb'; 'Mo'; 'Tc'; 'Ru'; 'Rh'; 'Pd'; ...
 'Ag'; 'Cd'; 'In'; 'Sn'; 'Sb'; 'Te'; 'I'; 'Xe'; 'Cs'; 'Ba'; 'La'; 'Ce'; ...
 'Pr'; 'Nd'; 'Pm'; 'Sm'; 'Eu'; 'Gd'; 'Tb'; 'Dy'; 'Ho'; 'Er'; 'Tm'; 'Yb';...
 'Lu'; 'Hf'; 'Ta'; 'W'; 'Re'; 'Os'; 'Ir'; 'Pt'; 'Au'; 'Hg'; 'Tl'; 'Pb'; ...
 'Bi'; 'Po'; 'At'; 'Rn'; 'Fr'; 'Ra'; 'Ac'; 'Th'; 'Pa'; 'U'; 'Np'; 'Pu'};

% size (CN_A_Num);
size (ElementType);

%%

%%*************************************************************************
%%
function [CN_A] = CN_CoordinationNumbers()

CN_A =     [0.9118	0	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9865	0	0	 0.0000;
    0.0000	0.9808	1.9697	0	 0.0000;
    0.0000	0.9706	1.9441	2.9128	 4.5856;
    0.0000	0.9868	1.9985	2.9987	 3.9844;
    0.0000	0.9944	2.0143	2.9903	 0.0000;
    0.0000	0.9925	1.9887	0	 0.0000;
    0.0000	0.9982	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9684	0	0	 0.0000;
    0.0000	0.9628	1.9496	0	 0.0000;
    0.0000	0.9648	1.9311	2.9146	 0.0000;
    0.0000	0.9507	1.9435	2.9407	 3.8677;
    0.0000	0.9947	2.0102	2.9859	 0.0000;
    0.0000	0.9948	1.9903	0	 0.0000;
    0.0000	0.9972	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9767	0	0	 0.0000;
    0.0000	0.9831	1.9349	0	 0.0000;
    0.0000	1.8627	2.8999	0	 0.0000;
    0.0000	1.8299	3.8675	0	 0.0000;
    0.0000	1.9138	2.911	0	 0.0000;
    0.0000	1.8269	10.6191	0	 0.0000;
    0.0000	1.6406	9.8849	0	 0.0000;
    0.0000	1.6483	9.1376	0	 0.0000;
    0.0000	1.7149	2.9263	7.7785	 0.0000;
    0.0000	1.7937	6.5458	6.2918	 0.0000;
    0.0000	0.9576	0	0	 0.0000;
    0.0000	1.9419	0	0	 0.0000;
    0.0000	0.9601	1.9315	2.9233	 0.0000;
    0.0000	0.9434	1.9447	2.9186	 3.8972;
    0.0000	0.9889	1.9793	2.9709	 0.0000;
    0.0000	0.9901	1.9812	0	 0.0000;
    0.0000	0.9974	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9738	0	0	 0.0000;
    0.0000	0.9801	1.9143	0	 0.0000;
    0.0000	1.9153	2.8903	0	 0.0000;
    0.0000	1.9355	3.9106	0	 0.0000;
    0.0000	1.9545	2.9225	0	 0.0000;
    0.0000	1.942	11.0556	0	 0.0000;
    0.0000	1.6682	9.5402	0	 0.0000;
    0.0000	1.8584	8.8895	0	 0.0000;
    0.0000	1.9003	2.9696	0	 0.0000;
    0.0000	1.863	5.7095	0	 0.0000;
    0.0000	0.9679	0	0	 0.0000;
    0.0000	1.9539	0	0	 0.0000;
    0.0000	0.9633	1.9378	2.9353	 0.0000;
    0.0000	0.9514	1.9505	2.9259	 3.9123;
    0.0000	0.9749	1.9523	2.9315	 0.0000;
    0.0000	0.9811	1.9639	0	 0.0000;
    0.0000	0.9968	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9909	0	0	 0.0000;
    0.0000	0.9797	1.8467	0	 0.0000;
    0.0000	1.9373	2.9175	0	 0.0000;
    2.7991	0	0	0	 0.0000;
    0.0000	2.9425	0	0	 0.0000;
    0.0000	2.9455	0	0	 0.0000;
    0.0000	2.9413	0	0	 0.0000;
    0.0000	2.93	0	0	 0.0000;
    0.0000	1.8286	0	0	 0.0000;
    0.0000	2.8732	0	0	 0.0000;
    0.0000	2.9086	0	0	 0.0000;
    0.0000	2.8965	0	0	 0.0000;
    0.0000	2.9242	0	0	 0.0000;
    0.0000	2.9282	0	0	 0.0000;
    0.0000	2.9246	0	0	 0.0000;
    0.0000	2.8482	0	0	 0.0000;
    0.0000	2.9219	0	0	 0.0000;
    0.0000	1.9254	3.884	0	 0.0000;
    0.0000	1.9459	2.8988	0	 0.0000;
    0.0000	1.9292	10.9153	0	 0.0000;
    0.0000	1.8104	9.8054	0	 0.0000;
    0.0000	1.8858	9.1527	0	 0.0000;
    0.0000	1.8648	2.9424	0	 0.0000;
    0.0000	1.9188	6.6669	0	 0.0000;
    0.0000	0.9846	0	0	 0.0000;
    0.0000	1.9896	0	0	 0.0000;
    0.0000	0.9267	1.9302	2.942	 0.0000;
    0.0000	0.9383	1.9356	2.9081	 3.9098;
    0.0000	0.982	1.9655	2.95	 0.0000;
    0.0000	0.9815	1.9639	0	 0.0000;
    0.0000	0.9954	0	0	 0.0000;
    0.0000	0	0	0	 0.0000;
    0.0000	0.9705	0	0	 0.0000;
    0.0000	0.9662	1.8075	0	 0.0000;
    0.0000	2.907	0	0	 0.0000;
    0.0000	2.8844	0	0	 0.0000;
    0.0000	2.8738	0	0	 0.0000;
    0.0000	2.8878	0	0	 0.0000;
    0.0000	2.9095	0	0	 0.0000;
    0.0000	1.9209	0	0	 0.0000;
    ];
				
%%

%%*************************************************************************
%%
function [r2_r4] = r2_r4_MultipoleExpectation()

r2_r4 = [2.00734898; 1.56637132; 5.01986934; 3.85379032; 3.64446594; ...
3.10492822; 2.71175247; 2.5936168; 2.3882525; 2.21522516; 6.58585536; ...
5.46295967; 5.65216669; 4.88284902; 4.29727576; 4.04108902; 3.72932356; ...
3.44677275; 7.97762753; 7.07623947; 6.60844053; 6.28791364; 6.07728703; ...
5.54643096; 5.80491167; 5.58415602; 5.41374528; 5.28497229; 5.22592821; ...
5.09817141; 6.12149689; 5.54083734; 5.06696878; 4.87005108; 4.59089647; ...
4.31176304; 9.55461698; 8.67396077; 7.97210197; 7.43439917; 6.58711862; ...
6.19536215; 6.0151729; 5.8162341; 5.65710424; 5.52640661; 5.44263305; ...
5.58285373; 7.02081898; 6.46815523; 5.9808912; 5.81686657; 5.53321815; ...
5.25477007; 11.02204549; 10.15679528; 9.35167836; 9.06926079; ...
8.97241155; 8.90092807; 8.8598484; 8.81736827; 8.7931771; 7.89969626; ...
8.80588454; 8.42439218; 8.54289262; 8.4758337; 8.45090888; 8.47339339; ...
7.83525634; 8.20702843; 7.70559063; 7.32755997; 7.03887381; 6.6897872; ...
6.05450052; 5.88752022; 5.70661499; 5.78450695; 7.79780729; 7.26443867; ...
6.78151984; 6.67883169; 6.39024318; 6.09527958; 11.79156076; ...
11.10997644; 9.51377795; 8.67197068; 8.77140725; 8.65402716; 8.53923501;...
8.85024712];

%

%%

%%*************************************************************************

%%
function [r_cov] = rcov_CovalentRadii()

r_cov = [0.80628308; 1.15903197; 3.02356173; 2.36845659; 1.94011865; ...
1.88972601; 1.78894056; 1.58736983; 1.61256616; 1.68815527; 3.52748848; ...
3.14954334; 2.84718717; 2.62041997; 2.7715982; 2.57002732; 2.49443835; ...
2.41884923; 4.434557; 3.8802373; 3.35111422; 3.07395437; 3.04875805; ...
2.7715982; 2.69600923; 2.62041997; 2.51963467; 2.49443835; 2.544831; ...
2.74640188; 2.82199085; 2.74640188; 2.89757982; 2.7715982; 2.87238349; ...
2.94797246; 4.7621095; 4.2077898; 3.70386304; 3.50229216; 3.3259179; ...
3.12434702; 2.89757982; 2.84718717; 2.84718717; 2.72120556; 2.89757982; ...
3.0991507; 3.22513231; 3.17473967; 3.17473967; 3.0991507; 3.3259179; ...
3.30072128; 5.26603625; 4.434557; 4.08180818; 3.70386304; 3.98102289; ...
3.95582657; 3.93062995; 3.90543362; 3.80464833; 3.82984466; 3.80464833; ...
3.77945201; 3.75425569; 3.75425569; 3.72905937; 3.85504098; 3.67866672; ...
3.45189952; 3.30072128; 3.0991507; 2.97316878; 2.92277614; 2.79679452; ...
2.82199085; 2.84718717; 3.3259179; 3.27552496; 3.27552496; 3.42670319; ...
3.30072128; 3.47709584; 3.57788113; 5.06446567; 4.56053862; 4.2077898; ...
3.98102289; 3.82984466; 3.85504098; 3.8802373; 3.90543362];

%%


%%*************************************************************************

%%
function [RS6,S18,RS18,S6] = D3_DampingParam(Damp,DFT_functional)

if (Damp == 0)
    
    RS6_All = [0.999;
        1.094;
        1.139;
        0.892;
        0.923;
        1.217;
        1.345;
        1.224;
        0.872;
        1.166;
        1.261;
        1.287;
        1.129;
        1.021;
        1.532;
        1.252;
        1.427;
        1.557;
        1.586;
        1.541;
        1.158;
        1.239;
        1.087;
        1.37;
        1.223;
        1.66;
        1.613;
        0.929;
        0.806;
        0.837;
        1.215;
        1.221;
        1.128;
        1.176;
        0.949;
        1.333;
        1.605;
        1.671;
        1.931;
        1.378;
        1.355;
        1.373;
        1.417;
        1.581;
        1.325;
        1.619;
        1.446;
        1.235;
        1.221];
    
    S18_All = [-1.957;
        1.682;
        1.683;
        0.909;
        1.01;
        0.722;
        0.612;
        0.901;
        0.514;
        1.105;
        1.703;
        0.928;
        0.109;
        0.862;
        0.862;
        1.242;
        1.022;
        0.705;
        0.76;
        0.879;
        1.746;
        1.098;
        2.033;
        1.442;
        1.219;
        0.55;
        1.868;
        1.975;
        1.764;
        2.055;
        0.663;
        0.56;
        1.494;
        1.775;
        0.792;
        0.998;
        1.118;
        1.061;
        2.168;
        1.217;
        1.279;
        0.595;
        0;
        0;
        0;
        0;
        0;
        0.673;
        1.206];
    
    RS18_All = [0.697;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1];
    
    S6_All = [1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        0.64;
        0.82;
        0.56;
        0.75;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1;
        1];
    
    DFT_functionalType = {'slater-dirac-exchange';
        'b-lyp';
        'b-p';
        'b97-d';
        'revpbe';
        'pbe';
        'pbesol';
        'rpw86-pbe';
        'rpbe';
        'tpss';
        'b3-lyp';
        'pbe0';
        'hse06';
        'revpbe38';
        'pw6b95';
        'tpss0';
        'b2-plyp';
        'pwpb95';
        'b2gp-plyp';
        'ptpss';
        'hf';
        'mpwlyp';
        'bpbe';
        'bh-lyp';
        'tpssh';
        'pwb6k';
        'b1b95';
        'bop';
        'o-lyp';
        'o-pbe';
        'ssb';
        'revssb';
        'otpss';
        'b3pw91';
        'revpbe0';
        'pbe38';
        'mpw1b95';
        'mpwb1k';
        'bmk';
        'cam-b3lyp';
        'lc-wpbe';
        'm05';
        'm052x';
        'm06l';
        'm06';
        'm062x';
        'm06hf';
        'dftb3';
        'hcth120'};
    
    
    
elseif (Damp == 1) %BJ Damping
    DampingParam= [0.3946	3.2822	4.8516	1;
        0.4298	2.6996	4.2359	1;
        0.5238	2.355	3.5016	1;
        0.182	0.8318	4.0094	1;
        0.5545	2.2609	3.2297	1;
        0.4289	0.7875	4.4407	1;
        0.4613	1.3845	4.5062	1;
        0.3981	1.9889	4.4211	1;
        0.4535	1.9435	4.4752	1;
        0.3385	0.9171	2.883	1;
        0.3768	1.2576	4.5865	1;
        0.4145	1.2177	4.8593	1;
        0.383	2.31	5.685	1;
        0.4309	1.476	3.9446	1;
        0.2076	0.7257	6.375	1;
        0.3065	0.9147	5.057	0.64;
        0	0.213	6.0519	0.5;
        0.0009	0.2112	5.9807	0.5;
        0.487	3.295	3.5043	1;
        0.4831	2.0077	4.5323	1;
        0.5299	2.6205	2.8065	1;
        0.4466	2.9491	6.1742	1;
        0.4567	4.0728	4.3908	1;
        0.5512	3.3816	2.9444	1;
        -0.0952	-0.1744	5.217	1;
        0.472	0.4389	4.0986	1;
        0.4634	2.7495	4.3153	1;
        0.4312	2.8524	4.4693	1;
        0.2793	1.0354	4.9615	1;
        0.4679	1.7588	3.7619	1;
        0.4529	2.2382	4.655	1;
        0.1955	1.0508	6.4177	1;
        0.1805	0.9383	7.7627	1;
        0.2092	1.4507	5.5545	1;
        0.194	2.086	5.9197	1;
        0.3708	2.0674	5.4743	1;
        0.3919	1.8541	5.0897	1;
        0	0.2597	6.3332	0.56;
        0	0.2804	6.5745	0.75;
        0	0.2904	7.3141	0.82;
        0.5607	3.9027	4.5622	1;
        0.4249	2.1849	4.2783	1;
        0.1702	0.9841	3.8506	1;
        0.5014	4.0672	4.8409	1;
        0.3563	1.0821	4.3359	1;
        0.7461	3.209	4.1906	1];
    
    RS6_All= DampingParam(:,1);
    S18_All= DampingParam(:,2);
    RS18_All= DampingParam(:,3);
    S6_All= DampingParam(:,4);
    
    
    DFT_functionalType = {'b2-plyp';
        'dsd-blyp';
        'dsd-blyp-fc';
        'bop';
        'mpwlyp';
        'o-lyp';
        'pbesol';
        'bpbe';
        'opbe';
        'ssb';
        'revssb';
        'otpss';
        'b3pw91';
        'bh-lyp';
        'revpbe0';
        'tpssh';
        'mpw1b95';
        'pwb6k';
        'b1b95';
        'bmk';
        'cam-b3lyp';
        'lc-wpbe';
        'b2gp-plyp';
        'ptpss';
        'pwpb95';
        'hf/mixed';
        'hf/sv';
        'hf/minis';
        'b3-lyp/6-31gd';
        'hcth120';
        'dftb3'};
    
    
end


num_DFT_functionalType= size(DFT_functionalType,1);

%     DFT_functional_str{1,1}= DFT_functional;
for i= 1:num_DFT_functionalType
    
    if(strcmp(DFT_functionalType{i}, DFT_functional))
        % if(DFT_functionalType{i} == DFT_functional_str)
        DFT_functionalIndex= i;
    end
end


RS6= RS6_All(DFT_functionalIndex,1);
S18= S18_All(DFT_functionalIndex,1);
RS18= RS18_All(DFT_functionalIndex,1);
S6= S6_All(DFT_functionalIndex,1);


% size (DFT_functionalType);
% size(RS6);


%%
function [r0_Matrix_upperTriang_symmetric]= r0_AB_cutOffRadius_atomPair(NumElements)

% A=1:10
% % B=tril(ones(4))
% % B=tril(ones(5),-1)
% B=triu(ones(5),1)
% B(B==1)=A
% 
% C=tril(ones(5),-1);
% C(C==1)=A
% C=C'

r0=[2.1823	1.8547	2.9086	2.355	2.5141
2.4492	2.3667	2.1768	2.0646	1.9892
2.9898	2.5129	2.8766	2.8884	2.8304
2.619	2.4757	2.3725	3.2147	2.7597
2.7361	2.6832	2.6379	2.923	2.549
2.4926	2.4667	2.4515	2.4413	2.4318
2.8502	2.9226	2.914	2.73	2.6026
2.5087	3.2893	2.8786	2.8997	2.8535
3.0905	3.0301	2.9189	2.8578	2.824
2.8004	2.7846	2.5424	2.9743	3.0775
3.0893	2.9091	2.7806	2.6848	3.3968
3.063	3.0632	2.9455	2.9244	2.9046
2.8878	2.8709	2.8568	2.6798	2.5189
3.0481	2.8136	2.8032	2.7967	2.7897
2.8395	2.9007	2.8559	2.811	2.7676
2.6912	2.7895	2.7522	2.7202	2.5315
2.9852	3.116	3.1416	2.9664	2.8388
2.7412	3.4155	3.0548	3.385	3.0942
3.0187	2.9875	2.9659	2.8763	1.7347
2.5732	2.5095	2.3917	2.2527	2.1328
2.0625	1.9891	1.9251	2.6397	2.7321
2.7427	2.6605	2.5538	2.4797	2.4019
2.3289	2.8315	3.0588	2.9765	2.906
2.8494	2.6223	2.7623	2.7136	2.6709
2.6338	2.6006	2.5729	2.6934	2.6838
2.6271	2.587	2.5355	2.4814	2.8991
3.1658	3.0953	3.0167	2.7998	2.7312
2.6777	2.6334	2.596	2.5621	2.5324
2.6601	2.8058	2.8275	2.7917	2.7638
2.7209	2.674	3.0122	3.3271	3.2662
3.247	3.2241	3.2044	3.189	3.1737
3.1608	3.0151	2.9703	2.9584	3.0951
3.0805	3.0689	3.0636	3.0081	2.9674
2.905	2.852	2.8078	2.7604	2.5849
2.5524	2.5183	2.6104	2.7881	2.8482
2.8325	2.8209	2.789	2.7489	3.0522
3.3206	3.4208	3.2075	3.1918	3.1674
3.1442	3.1294	3.4956	2.9802	2.9977
3.1933	2.8784	2.6395	2.5086	2.419
3.6031	3.1052	3.2776	3.7513	3.3932
3.1331	2.9789	2.876	3.8724	3.3474
3.2475	3.2613	3.184	3.4161	3.0991
3.0693	3.0575	3.0511	3.054	3.0416
3.2467	3.7867	3.4771	3.2471	3.1129
3.0239	4.0388	3.5823	3.4524	3.3978
3.6448	3.5821	3.4925	3.4673	3.4635
3.4617	3.4652	3.2555	3.483	4.0181
3.7262	3.5066	3.3812	3.2925	4.2241
4.0432	3.6432	3.6108	3.5848	3.5621
3.5412	3.5199	3.505	3.2586	3.3063
3.6919	3.4635	3.4519	3.4445	3.4344
3.3171	3.8174	3.8325	3.748	3.6725
3.6037	3.6484	3.5742	3.4947	3.2734
3.5284	4.0739	3.7735	3.5547	3.4329
3.3374	4.2541	3.8132	3.7004	3.5152
3.5127	3.4971	3.4795	3.5598	3.0982
2.9484	3.0214	2.766	2.6648	2.6908
2.5473	3.1219	3.2962	3.2363	3.1613
3.1193	3.054	3.1468	2.9804	3.4621
3.6214	3.5004	3.4359	3.4225	2.8999
3.3252	3.2699	3.2357	3.2229	3.1987
3.1639	3.1921	3.1732	3.1774	3.1487
3.2863	3.1312	3.61	3.7689	3.6107
3.5363	3.0739	3.0473	2.9648	2.9245
2.9032	2.9154	2.8759	3.2807	3.3474
3.3385	3.3518	3.3377	3.4958	3.3386
3.7887	4.0046	3.8088	3.8522	3.8293
3.8078	3.7908	3.7734	3.7598	3.5292
3.6235	3.599	3.6875	3.67	3.6581
3.648	3.4878	3.5856	3.5442	3.5105
3.4804	3.4194	3.0162	2.9508	2.8731
3.2299	3.3493	3.3599	3.3787	3.3796
3.5593	3.395	3.8218	3.972	3.88
3.6659	3.6875	3.6715	3.6503	3.7465
3.216	2.9531	2.7776	2.6482	2.6233
2.4994	3.762	3.1331	3.5929	3.3605
3.1866	3.0651	2.9768	2.9093	3.8823
3.4353	3.4185	3.3538	3.2771	3.0557
3.1836	3.1272	3.0908	3.063	3.049
3.0196	3.5663	3.3872	3.256	3.1667
3.1029	3.0535	3.9388	3.5762	3.6062
3.5393	3.2996	3.2137	3.1216	3.0732
3.0431	3.0203	3.0051	3.1384	3.6863
3.5379	3.4241	3.3481	3.2913	3.2473
4.0049	4.1555	3.791	3.6625	3.6395
3.6185	3.5974	3.5802	3.5665	3.5391
3.4517	3.8881	3.4987	3.4827	3.4717
3.4626	3.536	3.6486	3.5077	3.4346
3.3775	3.3094	3.1267	3.0751	3.0198
3.109	3.6958	3.5698	3.4632	3.3985
3.3488	3.3076	4.0438	3.7675	3.9886
3.8289	3.7404	3.7114	3.6814	3.5659
2.9103	2.7063	2.5697	2.477	2.4091
3.2485	3.2	3.2826	3.3325	3.1245
2.9879	2.8848	2.804	3.376	3.4729
3.4378	3.386	3.3401	3.3308	3.2428
3.1893	3.1537	3.1265	3.1058	3.0843
3.2541	3.3643	3.197	3.0914	3.0108
2.9457	3.4475	3.5789	3.5783	3.5301
3.5262	3.4679	3.294	3.2435	3.2115
3.1875	3.1692	3.1737	3.3617	3.5036
3.5433	3.2633	3.1888	3.1284	3.5384
3.7426	3.7381	3.6598	3.64	3.622
3.6078	3.5934	3.5803	3.4902	3.3989
3.4209	3.5183	3.505	3.4951	3.4892
3.5145	3.5339	3.4905	3.3461	3.2411
3.171	3.2125	3.0158	3.1457	2.9942
3.3642	3.5366	3.5923	3.3164	3.2486
3.191	3.5875	3.7351	3.904	3.7459
3.6943	3.6692	3.6476	3.5816	2.6225
2.4846	2.3885	2.3176	2.9357	2.9586
3.0911	3.0991	3.0465	2.9054	2.7952
2.7071	3.0746	3.2487	3.2084	3.155
3.1072	3.0555	3.0259	2.9658	2.9235
2.8909	2.8643	2.8413	3.0571	3.1267
3.1207	3.0107	2.9227	2.8496	3.159
3.3552	3.3463	3.296	3.2559	3.1975
3.0975	3.0338	2.9892	2.9548	2.9273
2.9397	3.1608	3.2589	3.2773	3.181
3.099	3.0301	3.2698	3.513	3.5093
3.4411	3.4204	3.4019	3.3871	3.3724
3.3601	3.2887	3.2107	3.1606	3.2937
3.2799	3.2694	3.2626	3.2809	3.2832
3.2396	3.1971	3.1581	3.0862	3.0043
2.9644	2.9276	2.9159	3.1568	3.2854
3.3214	3.2364	3.1615	3.0961	3.3286
3.5167	3.6719	3.5156	3.4702	3.4446
3.4222	3.3599	2.4817	2.3511	2.2571
2.7093	3.0822	2.9369	2.9297	2.8727
2.8805	2.7457	2.6386	2.8817	3.32
3.2787	3.23	3.1885	2.8508	3.1225
3.0972	3.0669	3.0253	2.9948	2.7436
2.9048	2.9541	2.9406	2.9812	2.8694
2.778	2.9812	3.4004	3.3855	3.3352
3.0518	2.9969	2.9757	2.9462	2.9148
2.8038	2.7615	2.8429	3.0069	3.0804
3.089	3.1428	3.0394	2.9531	3.1083
3.5174	3.5155	3.466	3.4499	3.4359
3.4243	3.4128	3.4031	3.3322	3.2434
3.1938	3.358	3.3482	3.3397	3.3344
3.3307	3.3154	3.272	3.2326	3.1983
3.1789	2.9572	2.8338	2.7826	2.8324
3.0055	3.1039	3.1285	3.1956	3.1
3.0175	3.1682	3.5274	3.6547	3.5197
3.4888	3.4676	3.4491	3.4024	2.2996
2.1946	2.5781	2.8582	2.903	2.8674
2.7664	2.733	2.6881	2.572	2.7552
3.0914	3.0604	3.0133	2.9714	2.7385
2.9032	2.8778	2.8476	2.8184	2.7908
2.7608	2.8657	2.8505	2.8322	2.83
2.8109	2.7828	2.8586	3.1722	3.1746
3.1287	2.9394	2.8847	2.8493	2.8143
2.7801	2.7472	2.7164	2.8492	2.964
3.0094	2.9775	2.9872	2.9789	2.9602
2.9917	3.2884	3.3047	3.2415	3.2253
3.211	3.1992	3.1877	3.1779	3.1228
3.0094	2.9975	3.1325	3.1233	3.1147
3.1088	3.126	3.1144	3.0726	3.0329
2.9973	2.9738	2.8197	2.7891	2.7574
2.835	2.9558	2.9953	3.0147	3.037
3.0394	3.028	3.0566	3.3085	3.4625
3.329	3.2914	3.2685	3.2494	3.1877
2.1374	2.4839	2.712	2.7789	2.7571
2.6926	2.6331	2.5728	2.5139	2.6605
2.9403	2.9187	2.8736	2.8319	2.664
2.7621	2.7358	2.7054	2.6764	2.6491
2.6271	2.7438	2.7781	2.7571	2.7284
2.6929	2.6532	2.7683	3.0212	3.0381
2.9967	2.8658	2.811	2.7638	2.724
2.6873	2.653	2.6212	2.7225	2.8427
2.9003	2.901	2.8837	2.8582	2.8272
2.9057	3.1378	3.1681	3.0944	3.0779
3.0635	3.0513	3.0396	3.0296	2.9888
2.858	2.8646	2.9832	2.9747	2.9661
2.9597	2.994	2.9866	2.9467	2.907
2.8705	2.8427	2.7261	2.6933	2.6606
2.7216	2.8393	2.9192	2.9366	2.9313
2.9165	2.8929	2.9746	3.1653	3.337
3.2069	3.1643	3.1405	3.1209	3.0484
3.7082	3.257	3.3921	3.8129	3.4608
3.2096	3.0574	2.9517	3.974	3.4972
3.4037	3.4024	3.3315	3.5263	3.249
3.2206	3.2064	3.1968	3.195	3.1811
3.3547	3.8475	3.5455	3.3259	3.1958
3.1063	4.1428	3.7241	3.6019	3.6659
3.7514	3.6931	3.6085	3.5832	3.5776
3.5736	3.5744	3.3875	3.5885	4.0869
3.8048	3.5929	3.4716	3.383	4.334
4.1894	3.7871	3.7514	3.7257	3.7037
3.6831	3.6624	3.6479	3.4012	3.4253
3.8138	3.6078	3.5971	3.5898	3.5804
3.4741	3.9618	3.9644	3.8823	3.807
3.7378	3.7701	3.6926	3.609	3.3994
3.6287	4.1432	3.8527	3.6425	3.5267
3.4328	4.3627	3.95	3.8394	3.6702
3.6669	3.6546	3.6324	3.7009	3.4839
3.397	3.3266	3.2984	3.5668	3.3264
3.1606	3.6192	3.7993	3.6759	3.6142
3.5979	3.0277	3.511	3.4566	3.4519
3.4114	3.3922	3.3591	3.351	3.3336
3.3514	3.3182	3.467	3.3143	3.7911
3.9604	3.7938	3.7239	3.2295	3.2076
3.1214	3.0789	3.0568	3.0584	3.0275
3.491	3.5219	3.5088	3.5362	3.5183
3.6883	3.5358	3.99	4.2321	3.9924
4.0397	4.017	3.9958	3.9784	3.9608
3.9471	3.7145	3.8157	3.7935	3.8757
3.8586	3.8468	3.8359	3.6675	3.843
3.805	3.7928	3.7392	3.6742	3.2446
3.1814	3.0581	3.4475	3.5283	3.532
3.5602	3.5565	3.7479	3.5883	4.0249
4.173	4.0335	3.8448	3.8724	3.8579
3.8375	3.9451	4.0106	3.7105	3.5142
3.3684	3.3562	3.2085	3.6569	3.6773
3.6586	3.5979	3.5256	3.299	3.4429
3.3896	3.3593	3.3492	3.3316	3.3045
3.9837	3.7359	3.5837	3.4707	3.4018
3.3549	3.8225	3.85	3.8697	3.807
3.5643	3.4943	3.4006	3.3617	3.3433
3.3304	3.3249	3.452	4.1314	3.9105
3.7746	3.6729	3.6105	3.5672	4.6588
4.1725	4.0637	3.9231	3.9003	3.8792
3.8579	3.8397	3.8262	3.783	3.7258
3.7081	3.7616	3.7461	3.7358	3.7251
3.7832	3.998	3.8981	3.8264	3.7668
3.6928	3.5239	3.4528	3.3747	3.4354
4.1511	3.9478	3.8131	3.7209	3.665
3.6227	4.6947	4.0613	4.2373	4.034
3.994	3.9637	3.9397	3.8465	3.7917
3.5418	3.3686	3.2529	3.1692	3.9586
3.8678	3.8327	3.5295	3.498	3.7721
3.3845	3.3257	3.2921	3.2691	3.2585
3.2349	3.6871	3.8266	3.6177	3.4748
3.3805	3.312	4.0372	3.9844	3.9781
3.7165	3.7808	3.5956	3.4793	3.4246
3.3949	3.3748	3.3627	3.3608	3.812
3.9833	3.7911	3.6596	3.5704	3.5049
4.1278	4.1833	4.1382	4.0561	4.0372
4.0194	4.0049	3.9893	3.9773	3.6665
3.6132	3.9155	3.9222	3.91	3.9014
3.894	3.6787	3.8134	3.7762	3.7006
3.6263	3.5512	3.4696	3.4186	3.3677
3.3438	3.8259	4.0231	3.8349	3.7108
3.6263	3.5616	4.1718	4.1493	4.3023
3.9509	4.0816	4.0581	3.8311	3.9873
3.5017	3.318	3.1916	3.0982	3.6188
3.5808	3.5372	3.4834	3.4376	3.5017
3.3574	3.2946	3.2577	3.232	3.2136
3.1942	3.4862	3.5733	3.5816	3.4279
3.3218	3.2421	3.7059	3.7035	3.6877
3.6368	3.6931	3.6379	3.5147	3.4505
3.4132	3.3871	3.3686	3.3036	3.6015
3.7176	3.7511	3.6082	3.5059	3.4284
3.8125	3.8929	3.8591	3.786	3.7653
3.746	3.7304	3.7145	3.7015	3.5898
3.5297	3.591	3.637	3.6228	3.6129
3.6047	3.6156	3.6652	3.6216	3.5797
3.5402	3.4614	3.4261	3.3836	3.345
3.2807	3.6066	3.7509	3.7995	3.6639
3.5658	3.4894	3.8639	3.8823	4.0306
3.8585	3.8054	3.7796	3.7581	3.7079
3.3107	3.1523	3.0352	3.3917	3.8243
3.7665	3.714	3.6714	3.2751	3.6045
3.5693	3.2161	3.1786	3.1516	3.1291
3.3389	3.3959	3.3902	3.4182	3.2815
3.1787	3.4935	3.9161	3.8736	3.8162
3.4723	3.419	3.3806	3.3443	3.3116
3.2028	3.1669	3.2345	3.4502	3.5323
3.5495	3.5927	3.4619	3.3621	3.6189
4.0544	4.0164	3.9845	3.9672	3.9517
3.9392	3.9266	3.9162	3.8077	3.7566
3.4808	3.8647	3.8535	3.8443	3.8375
3.8041	3.7985	3.7531	3.7141	3.6807
3.4087	3.3508	3.2213	3.1651	3.2169
3.4527	3.5604	3.5919	3.6484	3.5224
3.4241	3.6735	4.0537	4.1408	3.9894
3.9661	3.9463	3.9274	3.9083	3.1046
2.973	3.2479	3.5826	3.531	3.4782
3.4346	3.1368	3.3658	3.3312	3.2982
3.268	3.2364	3.2111	3.2413	3.2775
3.2604	3.2547	3.2346	3.1176	3.3529
3.6751	3.6451	3.5885	3.3357	3.2808
3.2356	3.1964	3.1616	3.1296	3.0584
3.2999	3.3498	3.4102	3.4149	3.4224
3.4138	3.3001	3.4851	3.8118	3.7878
3.7454	3.7283	3.7128	3.7002	3.6877
3.6771	3.581	3.5095	3.4886	3.6256
3.6147	3.6054	3.599	3.5813	3.5756
3.5297	3.4894	3.4545	3.4201	3.1968
3.1626	3.1259	3.2677	3.348	3.434
3.4539	3.4745	3.4762	3.3641	3.5435
3.82	3.9297	3.7787	3.7492	3.7275
3.7085	3.6756	2.9148	3.1434	3.4156
3.37	3.317	3.2723	3.0435	3.2013
3.167	3.1339	3.1036	3.0752	3.0534
3.1708	3.1915	3.1652	3.1353	3.0994
3.0613	3.2492	3.5075	3.489	3.4336
3.2429	3.186	3.1335	3.0913	3.0548
3.0214	2.9915	3.1487	3.2777	3.3227
3.3177	3.2997	3.2742	3.2451	3.3859
3.6414	3.6316	3.5802	3.563	3.5474
3.5347	3.5222	3.5115	3.4265	3.3368
3.3397	3.4595	3.449	3.4396	3.4329
3.4301	3.4207	3.3742	3.3326	3.2962
3.2607	3.0848	3.0507	3.0147	3.1296
3.2713	3.3426	3.354	3.3492	3.3342
3.312	3.4479	3.6582	3.7857	3.6365
3.6024	3.5792	3.5598	3.515	4.2411
3.8765	3.7788	3.7434	3.6859	3.7873
3.611	3.5805	3.5606	3.5453	3.5368
3.5189	3.6096	3.9878	3.7037	3.5116
3.3937	3.3082	4.4352	4.1151	3.9858
3.9829	4.028	3.985	3.9144	3.8921
3.8859	3.8796	3.8773	3.7409	3.8635
4.2702	4.0129	3.819	3.708	3.6209
4.6531	4.6373	4.1741	4.1366	4.1092
4.0872	4.0657	4.0448	4.0306	3.7726
3.789	4.1336	3.9874	3.9764	3.9683
3.9597	3.848	4.4061	4.3814	4.3048
4.2283	4.1527	4.1496	4.0548	3.9498
3.7493	3.9037	4.3328	4.0654	3.8755
3.7738	3.6815	4.6806	4.3422	4.1907
4.1425	4.0428	4.0295	4.008	4.0829
4.1035	3.9804	3.9623	3.8985	3.2858
3.8241	3.7711	3.7582	3.7259	3.7117
3.6809	3.628	3.8816	3.6283	3.9432
3.7266	3.5755	4.0826	4.2877	4.1179
4.0529	3.5589	3.5105	3.4183	3.3713
3.3719	3.3337	3.3099	3.8392	3.8232
4.0888	3.837	4.1865	3.9773	3.8299
4.3134	4.6268	4.3166	4.3581	4.3347
4.3138	4.2955	4.2771	4.2634	4.0307
4.1298	4.1122	4.1938	4.1773	4.1656
4.1542	3.9849	4.2817	4.2818	4.2217
4.1698	4.0977	3.6598	3.5312	3.3857
3.8075	3.8361	3.8288	3.8603	4.2457
4.0333	3.8789	4.3485	4.5111	4.323
4.1618	4.1951	4.1824	4.1641	4.278
3.8903	3.8181	3.7918	3.214	3.709
3.6536	3.6432	3.609	3.5941	3.5635
3.686	3.581	3.5858	3.8828	3.6697
3.5222	3.9733	4.1579	4.043	3.9584
3.4636	3.433	3.3369	3.2873	3.2917
3.2492	3.2231	3.7148	3.8486	3.756
3.7739	4.1114	3.901	3.7543	4.2258
4.475	4.2395	4.2351	4.2117	4.1906
4.1705	4.1523	4.1385	3.9763	4.019
3.9888	4.0679	4.0511	4.0394	4.0278
3.9314	4.1477	4.1026	4.0786	4.024
3.9523	3.5111	3.4244	3.2917	3.6846
3.8579	3.7822	3.7972	3.7758	3.9568
3.8031	4.2668	4.3795	4.2664	4.094
4.1466	4.1247	4.1057	4.1511	3.7642
3.7372	3.1727	3.6496	3.5927	3.5833
3.5473	3.5313	3.5001	3.5568	3.5364
3.533	3.8303	3.6164	3.4678	3.9254
4.1247	3.9563	3.9025	3.4994	3.3797
3.2803	3.2281	3.2345	3.1883	3.16
3.6439	3.7215	3.7687	3.7125	4.054
3.8409	3.692	4.1309	4.4134	4.1831
4.2011	4.1793	4.1593	4.1424	4.1247
4.1116	3.889	3.9573	3.9543	4.043
4.027	4.0158	4.0048	3.8405	4.0616
4.0294	3.99	3.9341	3.8628	3.4199
3.3409	3.2154	3.6104	3.7311	3.7909
3.7358	3.7161	3.8975	3.7413	4.169
4.3362	4.2173	4.0466	4.0515	4.0357
4.0158	4.126	3.7211	3.2178	3.6333
3.5775	3.5691	3.5327	3.5164	3.4854
3.4836	3.506	3.4884	3.788	3.573
3.4231	3.8646	4.0617	3.9182	3.8607
3.4309	3.4155	3.2679	3.2165	3.2274
3.1802	3.152	3.6182	3.6487	3.6681
3.7152	3.6325	3.7944	3.6436	4.0692
4.3458	4.1107	4.1402	4.1179	4.0973
4.08	4.0626	4.0489	3.8489	3.9237
3.8917	3.9781	3.9614	3.9498	3.939
3.8029	3.9979	3.964	3.9357	3.8711
3.8002	3.3809	3.281	3.1604	3.5577
3.6575	3.6907	3.7392	3.6693	3.8521
3.6939	4.1061	4.2751	4.1482	3.9941
4.0075	3.9926	3.9726	4.0571	3.4414
3.0896	3.0411	3.0161	3.0018	2.9962
2.9857	3.2868	3.8097	3.5789	3.376
3.2522	3.1684	3.9315	3.4874	3.4002
3.3673	3.6177	3.6033	3.4871	3.4386
3.4171	3.405	3.4023	3.1753	3.4724
3.6405	3.7701	3.5697	3.4465	3.3598
4.0944	3.8582	3.5857	3.5381	3.5139
3.4919	3.4717	3.453	3.4366	3.2706
3.2677	3.5894	3.3886	3.3754	3.3677
3.3571	3.2962	3.6492	3.6208	3.6331
3.5489	3.4759	3.5382	3.4782	3.4174
3.2052	3.5176	3.6864	3.8157	3.6155
3.4929	3.401	4.1245	3.7103	3.6823
3.5426	3.502	3.4827	3.4667	3.4865
3.5462	3.4885	3.4812	3.4413	3.4225
3.3897	3.3994	3.3925	3.4094	3.7218
3.5051	3.3528	3.7837	3.9848	3.831
3.7658	3.2946	3.2737	3.1714	3.1164
3.1293	3.0756	3.0426	3.521	3.5627
3.5569	3.5813	3.5561	3.7235	3.5701
3.985	4.2583	4.027	4.0653	4.0426
4.0216	4.0043	3.9866	3.9732	3.7595
3.848	3.8131	3.9008	3.8836	3.8718
3.8608	3.7104	3.8833	3.8464	3.8333
3.7798	3.7102	3.2572	3.1905	3.0735
3.4803	3.5693	3.5793	3.6055	3.5941
3.783	3.6225	4.0206	4.1973	4.0711
3.8952	3.9158	3.9007	3.8802	3.9744
3.4421	3.4339	3.3907	3.3699	3.3363
3.3476	3.3348	3.3473	3.3408	3.4686
3.3162	3.7465	3.928	3.7716	3.7035
3.2376	3.2145	3.1521	3.122	3.0567
3.0478	3.0099	3.4639	3.5087	3.499
3.5187	3.5259	3.6808	3.5266	3.9416
4.1898	3.9676	4.0093	3.9867	3.9657
3.9485	3.931	3.9176	3.6984	3.8157
3.7635	3.8463	3.8291	3.8164	3.8056
3.6515	3.8027	3.7648	3.7317	3.7
3.6466	3.21	3.1494	3.0342	3.4236
3.5157	3.5221	3.5438	3.5643	3.7409
3.5797	3.9765	4.1385	4.018	3.8327
3.8546	3.8392	3.8188	3.915	3.4327
3.3593	3.337	3.3027	3.317	3.3019
3.3118	3.3059	3.4355	3.2827	3.7211
3.9079	3.7543	3.6866	3.205	3.1807
3.1101	3.0761	3.0565	3.0322	2.992
3.4265	3.4757	3.4659	3.4835	3.4901
3.6453	3.4904	3.9112	4.1562	3.9463
3.9883	3.9661	3.9454	3.9286	3.9115
3.8983	3.6772	3.7656	3.7419	3.8288
3.8121	3.8005	3.7899	3.6378	3.766
3.7281	3.6957	3.6654	3.6106	3.1917
3.1221	3.0096	3.3845	3.4814	3.4883
3.5089	3.5292	3.7062	3.5443	3.9458
4.1129	4.0017	3.8126	3.8342	3.8191
3.7989	3.893	3.3462	3.3234	3.289
3.295	3.2796	3.2876	3.2698	3.4084
3.2527	3.7012	3.8751	3.7203	3.6504
3.1847	3.1596	3.0843	3.048	3.0274
3.0323	2.9809	3.4075	3.4517	3.4433
3.4595	3.4552	3.6168	3.459	3.8873
4.1191	3.915	3.957	3.9345	3.9134
3.8965	3.8792	3.8659	3.6428	3.7317
3.7071	3.795	3.778	3.7662	3.756
3.602	3.7183	3.679	3.646	3.6154
3.558	3.1519	3.1128	3.0136	3.364
3.4559	3.4649	3.4853	3.495	3.6786
3.5139	3.9217	4.08	3.9747	3.7796
3.8008	3.7851	3.7644	3.8578	3.3008
3.2655	3.2874	3.2662	3.2707	3.2446
3.3748	3.2308	3.6893	3.8604	3.7053
3.6339	3.1715	3.1461	3.067	3.0295
3.0087	3.0163	2.98	3.3828	3.4423
3.433	3.4439	3.4315	3.5844	3.4364
3.8736	4.1069	3.9021	3.9429	3.92
3.8986	3.8815	3.8641	3.8507	3.6243
3.7126	3.688	3.779	3.7619	3.75
3.74	3.5849	3.6954	3.6542	3.6197
3.5882	3.5282	3.1198	3.0853	2.9855
3.3365	3.4445	3.4514	3.4698	3.472
3.6471	3.4923	3.9075	4.0647	3.9634
3.7635	3.7845	3.7687	3.7474	3.8402
3.2309	3.2606	3.2464	3.2521	3.2229
3.3496	3.2029	3.6676	3.8277	3.6742
3.6024	3.1599	3.1337	3.0539	3.0155
2.9939	3.0019	2.9646	3.3474	3.4139
3.4092	3.4242	3.4091	3.5576	3.4077
3.8473	4.0639	3.8708	3.9112	3.8883
3.8669	3.85	3.8326	3.8191	3.5951
3.6814	3.6574	3.7472	3.73	3.7181
3.7081	3.555	3.6525	3.6117	3.5779
3.5472	3.4878	3.1005	3.0384	2.968
3.301	3.416	3.4301	3.4508	3.4503
3.6208	3.4642	3.8813	4.0308	3.9383
3.7356	3.7549	3.7387	3.7173	3.8073
3.9579	3.7136	3.557	3.4422	3.3692
3.3173	3.7736	3.8002	3.8318	3.7708
3.5555	3.4812	3.389	3.3495	3.3293
3.3145	3.3068	3.4071	4.1028	3.8867
3.7476	3.6438	3.5772	3.5287	4.6027
4.1257	4.024	3.8728	3.8498	3.8289
3.8073	3.7892	3.7757	3.7497	3.6793
3.6546	3.7117	3.6965	3.6863	3.6758
3.7494	3.9669	3.865	3.7909	3.7289
3.6547	3.5071	3.4366	3.3604	3.3938
4.1231	3.9256	3.7882	3.6936	3.6337
3.586	3.9947	4.0096	4.1993	4.0047
3.9602	3.929	3.9049	3.7977	3.8619
3.6496	3.5023	3.4052	3.3343	4.066
3.9981	3.7631	3.7283	3.8111	3.6251
3.5086	3.4543	3.4249	3.405	3.393
3.3754	3.8388	4.019	3.8239	3.6879
3.5959	3.528	4.1538	4.1974	4.1551
4.0682	4.0496	4.0323	4.018	4.0025
3.9907	3.6775	3.6218	3.9375	3.9371
3.9253	3.917	3.9095	3.6893	3.8371
3.801	3.7257	3.651	3.5763	3.5086
3.4562	3.4037	3.3624	3.8543	4.0596
3.8682	3.7392	3.6519	3.5849	4.1989
4.1619	4.3205	3.9655	3.8872	3.8606
3.8424	4.0036	3.6625	3.5009	3.391
3.3092	3.7926	3.7544	3.7392	3.6896
3.7693	3.7152	3.5895	3.526	3.4902
3.4656	3.4486	3.3646	3.6745	3.7961
3.8346	3.6832	3.5768	3.4969	3.8994
3.9532	3.9108	3.8351	3.8145	3.7954
3.7796	3.7636	3.7506	3.6364	3.5788
3.6579	3.6873	3.6734	3.6637	3.6552
3.6666	3.7325	3.6894	3.6476	3.6078
3.5289	3.5073	3.4638	3.4243	3.344
3.6816	3.8307	3.8837	3.7388	3.6363
3.557	3.9507	3.936	4.0821	3.9116
3.8564	3.8306	3.8095	3.7604	3.5268
3.3849	3.2795	3.6158	4.0371	3.9892
3.9315	3.5718	3.5201	3.4783	3.4413
3.4091	3.3021	3.2682	3.3308	3.5562
3.6412	3.6627	3.7043	3.5678	3.465
3.7419	4.1794	4.1337	4.1054	4.0881
4.0725	4.0598	4.0471	4.0365	3.9203
3.8763	3.587	3.9846	3.9733	3.9641
3.9572	3.917	3.916	3.8713	3.5729
3.5355	3.5086	3.4509	3.3211	3.2633
3.3132	3.5602	3.6702	3.7055	3.7602
3.6278	3.5257	3.796	4.1766	4.2547
4.101	4.0793	4.0601	4.0412	4.0288
3.3662	3.2452	3.5017	3.8225	3.7832
3.725	3.4498	3.3966	3.3484	3.3085
3.2744	3.2433	3.1729	3.4393	3.4806
3.5405	3.5479	3.5557	3.5486	3.4304
3.6356	3.966	3.9289	3.8928	3.8756
3.8598	3.847	3.8343	3.8235	3.7157
3.6572	3.6361	3.7709	3.7597	3.7503
3.7436	3.715	3.7156	3.6699	3.6304
3.5963	3.5593	3.312	3.2762	3.181
3.4035	3.4798	3.5651	3.587	3.6078
3.611	3.4936	3.6925	3.9705	4.0659
3.9102	3.8835	3.8625	3.8436	3.821
3.2096	3.4166	3.6718	3.6406	3.5819
3.3662	3.3107	3.2559	3.2134	3.1776
3.1453	3.1168	3.2993	3.4272	3.4681
3.4639	3.4466	3.4228	3.3963	3.5548
3.813	3.7873	3.7445	3.7271	3.7113
3.6983	3.6854	3.6745	3.5746	3.5022
3.5039	3.621	3.6099	3.6004	3.5933
3.576	3.5714	3.5244	3.4834	3.448
3.4099	3.2082	3.173	3.1351	3.2754
3.4208	3.4884	3.5	3.496	3.4825
3.4628	3.615	3.8262	3.9359	3.78
3.7495	3.7269	3.7077	3.6757	4.6176
4.3092	4.1701	4.1457	4.1608	4.1128
4.0422	4.017	4.0078	3.9991	3.9952
3.8768	4.0182	4.3538	4.1026	3.9203
3.8107	3.7229	4.8353	4.816	4.3666
4.3415	4.3128	4.2896	4.2678	4.2464
4.2314	3.9494	3.9737	4.3149	4.1812
4.1683	4.159	4.1508	4.0268	4.6036
4.5151	4.4368	4.3587	4.2788	4.2611
4.1632	4.0557	3.8701	4.0542	4.4182
4.1573	3.98	3.8795	3.7874	4.8535
4.5348	4.3952	4.2964	4.2213	4.2062
4.1837	4.2646	4.4764	4.3016	4.228
3.7417	3.6899	3.5967	3.5464	3.5374
3.5017	3.4796	3.9891	3.9991	4.2136
3.9733	4.2919	4.0866	3.9402	4.5413
4.8272	4.508	4.5497	4.5242	4.5021
4.483	4.4635	4.449	4.2076	4.3255
4.2978	4.375	4.3572	4.3448	4.3337
4.1596	4.462	4.4517	4.3921	4.339
4.2624	3.8117	3.6825	3.5368	3.9523
4.0139	4.2516	4.0005	4.3518	4.1448
3.9916	4.5642	4.7025	4.5176	4.333
4.3704	4.3566	4.3366	4.4558	4.2196
4.113	3.6536	3.6082	3.5113	3.4587
3.4537	3.4141	3.3901	3.831	4.0007
3.9381	3.9292	4.2196	4.0169	3.8753
4.3891	4.6294	4.4232	4.3833	4.3578
4.3325	4.3132	4.2939	4.2792	4.1563
4.1828	4.1321	4.2044	4.1862	4.1739
4.1624	4.1107	4.3092	4.2538	4.2207
4.1635	4.0873	3.6988	3.5822	3.4526
3.8018	4.0165	3.9687	3.9568	4.2802
4.0736	3.9249	4.4134	4.5268	4.3888
4.2622	4.33	4.3022	4.2816	4.2862
4.0597	3.6154	3.5604	3.4576	3.4006
3.3956	3.352	3.3255	3.7483	3.9282
3.8912	3.8667	4.1542	3.9476	3.8035
4.3416	4.584	4.3155	4.3122	4.287
4.2645	4.2444	4.2252	4.2105	4.0508
4.1158	4.1298	4.134	4.1153	4.1029
4.0916	3.9995	4.2122	4.1483	4.1133
4.0536	3.977	3.5646	3.487	3.3699
3.7149	3.9412	3.9186	3.8936	3.858
4.0045	3.853	4.3688	4.5076	4.3607
4.2254	4.2121	4.1929	4.1686	4.2122
3.8596	3.7834	3.6594	3.6027	3.5747
3.5583	3.553	3.3417	3.7238	3.9681
3.9513	3.7573	3.6358	3.5499	4.3243
4.077	3.8461	3.8051	3.7796	3.7571
3.737	3.7169	3.7003	3.5329	3.5078
3.8164	3.6459	3.6312	3.6224	3.6126
3.5574	3.8478	3.8641	3.8067	3.7193
3.6407	3.6925	3.6325	3.5707	3.3673
3.7698	3.9485	3.999	3.8056	3.6843
3.5932	4.3396	3.9562	3.9583	3.8195
3.7643	3.7401	3.7293	3.7088	3.7543
3.6313	3.573	3.543	3.5251	3.5183
3.3019	3.6498	3.7909	3.8959	3.7039
3.58	3.4913	4.2753	4.0088	3.8007
3.7583	3.7318	3.7083	3.6876	3.6675
3.651	3.478	3.4595	3.768	3.5929
3.5772	3.5677	3.5582	3.5103	3.7572
3.7244	3.7421	3.6529	3.5743	3.6295
3.574	3.5184	3.3199	3.6915	3.837
3.9433	3.7527	3.6291	3.5355	4.2879
3.9065	3.928	3.756	3.713	3.6888
3.6709	3.6729	3.569	3.4945	3.4522
3.4243	3.4097	3.225	3.5605	3.6774
3.7698	3.6546	3.526	3.4319	4.2053
3.9103	3.6991	3.6622	3.6364	3.6136
3.5935	3.5739	3.5578	3.3731	3.36
3.7154	3.5036	3.4881	3.4785	3.4684
3.4163	3.6597	3.6243	3.614	3.5512
3.5178	3.5383	3.4733	3.4085	3.2483
3.6043	3.7255	3.8172	3.7019	3.5741
3.4757	4.2166	3.8119	3.839	3.6513
3.6144	3.59	3.57	3.58	3.4623
3.416	3.3851	3.3683	3.1832	3.5211
3.6262	3.7089	3.6151	3.4838	3.3873
4.179	3.8536	3.6447	3.6108	3.5854
3.5628	3.5428	3.5235	3.5075	3.3126
3.3088	3.6858	3.4577	3.4429	3.4314
3.4212	3.3655	3.5969	3.5589	3.5491
3.4837	3.4753	3.491	3.4247	3.3595
3.2069	3.5639	3.6744	3.7566	3.6615
3.5312	3.4306	4.1888	3.7605	3.7971
3.5941	3.5599	3.535	3.5153	3.5276
3.3975	3.3662	3.3492	3.1578	3.5009
3.5999	3.6765	3.5293	3.4501	3.352
4.1685	3.8324	3.6308	3.5971	3.5726
3.5507	3.5314	3.5126	3.4971	3.2846
3.2575	3.6709	3.4528	3.4395	3.4313
3.4207	3.3677	3.5575	3.5172	3.5077
3.44	3.3931	3.4625	3.3969	3.3333
3.1793	3.5416	3.6476	3.7246	3.5768
3.4974	3.3953	4.1768	3.7447	3.7955
3.581	3.5474	3.5226	3.5039	3.5165
3.3525	3.336	3.1564	3.4859	3.5823
3.6548	3.4849	3.4204	3.3209	4.1585
3.7995	3.5959	3.5628	3.5378	3.5155
3.4958	3.4768	3.4609	3.2426	3.2164
3.6666	3.4146	3.4009	3.3923	3.3829
3.3243	3.5386	3.4973	3.4887	3.4191
3.3694	3.4233	3.3764	3.3143	3.1558
3.5247	3.6295	3.7033	3.533	3.4472
3.3646	4.166	3.7119	3.7674	3.542
3.5093	3.4838	3.4684	3.4783	3.3308
3.1224	3.4785	3.5727	3.6409	3.4552
3.3553	3.2948	4.1536	3.7826	3.5749
3.5408	3.5155	3.4929	3.473	3.4537
3.4377	3.2135	3.1856	3.6517	3.3904
3.3766	3.368	3.3586	3.2975	3.5153
3.4715	3.4623	3.3891	3.3339	3.4007
3.3525	3.3041	3.1395	3.5153	3.6193
3.69	3.5038	3.4034	3.339	4.1608
3.6916	3.7521	3.5178	3.4853	3.4594
3.4437	3.4539	3.462	3.5621	3.5419
3.5398	3.5192	3.6487	3.5052	4.0579
4.2294	4.0359	4.078	4.0527	4.0297
4.0117	3.9932	3.9788	3.7491	3.8522
3.8174	3.9014	3.8827	3.8698	3.8604
3.7071	3.7818	3.734	3.6956	3.6622
3.6002	3.2329	3.1984	3.1094	3.4097
3.5654	3.5659	3.5697	3.5639	3.7131
3.5637	4.0745	4.195	4.1062	3.8861
3.9075	3.8888	3.8663	3.9553	4.2623
4.0245	3.8759	3.7673	3.6973	3.6465
4.198	4.338	4.3124	4.0727	4.0478
4.0234	4.0043	3.9854	3.9712	3.9006
3.8665	3.8608	3.9031	3.8868	3.8758
3.8658	3.9047	4.1335	4.0316	3.9568
3.8934	3.8164	3.6723	3.5989	3.5193
3.541	4.2862	4.0663	3.9183	3.8192
3.7557	3.7053	4.2289	4.211	4.3633
4.1459	4.1115	4.0813	4.0575	3.9818
4.1874	3.9804	3.8359	3.7398	3.6696
4.4564	4.4352	4.3539	4.2836	4.263
4.2442	4.2287	4.2123	4.1997	3.8332
3.8075	4.1805	4.1443	4.1316	4.1229
4.1156	3.8514	4.0153	3.9958	3.8976
3.8235	3.7478	3.6845	3.6299	3.5745
3.5228	4.0437	4.2309	4.0262	3.8883
3.7966	3.7266	4.4863	4.3843	4.2991
4.1147	4.0473	4.0209	4.002	4.204
4.015	3.8525	3.7405	3.6577	4.2192
4.1933	4.1122	4.0553	4.0322	4.0112
3.9939	3.9765	3.9624	3.8029	3.7772
3.9102	3.8961	3.8807	3.8704	3.862
3.8422	3.9177	3.8687	3.824	3.7823
3.7028	3.6876	3.6433	3.6025	3.5116
3.8871	4.0183	4.0659	3.9092	3.8005
3.7177	4.2513	4.1631	4.2767	4.0772
4.0318	4.0059	3.9842	3.9604	3.8901
3.7459	3.6388	4.0528	4.458	4.3772
4.3647	4.3449	4.3274	4.3134	4.2992
4.2877	4.1436	4.1391	3.8394	4.2295
4.2164	4.2063	4.1994	3.8022	3.8603
3.8115	3.7684	3.7292	3.6952	3.6197
3.4937	3.4338	3.4921	3.7741	3.868
3.8969	3.9478	3.8068	3.6996	4.0897
4.4427	4.4857	4.312	4.2999	4.281
4.2612	4.2718	3.738	3.6142	3.9489
4.2554	4.1785	4.1622	4.1421	4.124
4.1096	4.0951	4.0831	3.9407	3.9296
3.8968	4.0227	4.0092	3.9987	3.9917
3.9323	3.9365	3.8862	3.8451	3.8106
3.7669	3.4799	3.4417	3.3448	3.4781
3.6985	3.7672	3.7809	3.7995	3.8015
3.6775	3.9876	4.2463	4.3039	4.1207
4.105	4.0843	4.0643	4.0689	3.5889
3.8642	4.1072	4.0386	4.0178	3.9975
3.9793	3.9646	3.95	3.9378	3.7998
3.7772	3.7673	3.8763	3.8627	3.8519
3.8446	3.7932	3.7906	3.7379	3.6949
3.6589	3.6137	3.3737	3.3365	3.2952
3.469	3.6413	3.6923	3.6949	3.6896
3.6747	3.6558	3.9061	4.1054	4.1762
3.99	3.971	3.9486	3.9285	3.9253
5.0567	5.0454	4.7004	4.5802	4.5499
4.5257	4.5032	4.4811	4.4655	4.1663
4.2134	4.5274	4.4086	4.3936	4.3832
4.375	4.2343	4.7936	4.7091	4.6318
4.5535	4.4698	4.4341	4.3304	4.2158
4.042	4.2345	4.524	4.2765	4.1165
4.0222	3.9331	5.069	4.7693	4.6197
4.4733	4.432	4.4162	4.3928	4.4869
5.1814	4.8604	4.9125	4.8825	4.8568
4.8356	4.8135	4.7974	4.5309	4.7308
4.6682	4.7097	4.6871	4.6728	4.6617
4.4583	4.741	4.7156	4.6559	4.6013
4.5488	4.0525	3.9242	3.7802	4.1759
4.3663	4.4834	4.2312	4.5232	4.3207
4.1655	5.0446	5.0649	4.8654	4.6157
4.6706	4.6542	4.6308	4.7792	4.6261
4.5861	4.5601	4.5353	4.5156	4.4959
4.4813	4.3481	4.3787	4.3344	4.4064
4.3882	4.3759	4.3644	4.3115	4.5461
4.5199	4.4533	4.3961	4.3168	3.9011
3.7793	3.6431	4.0078	4.3257	4.157
4.1401	4.4357	4.2347	4.0879	4.6186
4.7365	4.6633	4.458	4.5273	4.5005
4.4799	4.4918	4.6201	4.595	4.5733
4.5544	4.5351	4.5209	4.2911	4.3894
4.3639	4.4488	4.4316	4.4195	4.4083
4.2457	4.5662	4.5542	4.4956	4.4423
4.3646	3.8945	3.7623	3.6129	4.045
4.0869	4.3204	4.0815	4.4226	4.2191
4.0681	4.6078	4.7761	4.5878	4.4194
4.4581	4.4444	4.4244	4.5342	4.5702
4.5485	4.5297	4.5105	4.4964	4.2671
4.3649	4.3384	4.4243	4.4073	4.3952
4.384	4.2213	4.534	4.523	4.4641
4.4109	4.3338	3.8635	3.7327	3.5853
4.0189	4.0612	4.2993	4.058	4.4031
4.199	4.0479	4.578	4.7498	4.564
4.3954	4.4332	4.4196	4.3996	4.509
4.5271	4.5083	4.4891	4.475	4.2415
4.3441	4.3162	4.4029	4.3858	4.3737
4.3625	4.1945	4.5059	4.4959	4.4366
4.3835	4.3067	3.8368	3.7071	3.561
3.9952	4.0364	4.2804	4.0369	4.386
4.1811	4.0299	4.5538	4.7272	4.5422
4.3739	4.4064	4.3933	4.3737	4.4868
4.4896	4.4705	4.4565	4.223	4.3257
4.2972	4.3842	4.3672	4.3551	4.3439
4.1756	4.4832	4.475	4.4155	4.3625
4.286	3.8153	3.686	3.5406	3.977
4.017	4.2647	4.0194	4.3721	4.1666
4.0152	4.5319	4.7076	4.5231	4.3531
4.3873	4.3741	4.3547	4.468	4.4515
4.4375	4.2047	4.3073	4.2779	4.3655
4.3485	4.3364	4.3253	4.1569	4.4604
4.4529	4.3936	4.3407	4.2645	3.7936
3.665	3.5204	3.9583	3.9978	4.2481
4.0017	4.358	4.1521	4.0006	4.5101
4.6877	4.5042	4.3343	4.3684	4.3552
4.3358	4.4486	4.4234	4.1908	4.2941
4.2636	4.3514	4.3344	4.3223	4.3112
4.1424	4.4429	4.4361	4.3764	4.3237
4.2478	3.7758	3.6476	3.5036	3.9434
3.9834	4.2354	3.9874	4.3466	4.1401
3.9883	4.4945	4.673	4.4901	4.3196
4.3537	4.3406	4.3212	4.4341	4.1243
4.1252	4.0253	4.1162	4.0984	4.0861
4.0745	4.062	4.2346	4.1774	4.1302
4.0863	4.0067	3.4944	3.3849	3.2679
3.7217	3.9137	3.8626	3.8312	4.2036
3.997	3.85	4.1912	4.4274	4.3282
4.214	4.2728	4.2484	4.2275	4.2023
4.2427	4.1168	4.2205	4.2036	4.1911
4.1807	4.0494	4.4204	4.3774	4.3398
4.2835	4.2349	3.4873	3.3534	3.2162
3.8228	3.8825	3.8448	3.812	4.2037
3.9943	3.8359	4.2315	4.5473	4.3978
4.2339	4.2549	4.2413	4.2216	4.3122
4.1541	4.1953	4.1791	4.1676	4.1578
3.9953	4.3119	4.2963	4.2283	4.1675
4.0958	3.904	3.8216	3.7068	3.7826
3.8758	4.2267	3.9454	3.8867	3.9592
3.8249	4.5534	4.5169	4.3483	4.1738
4.2032	4.1907	4.1676	4.271	4.2794
4.2622	4.2501	4.239	4.0694	4.345
4.3406	4.2796	4.2272	4.1543	3.711
3.587	3.4483	3.864	3.9143	4.1799
3.921	4.2895	4.08	3.9269	4.4373
4.5975	4.4202	4.2458	4.2794	4.2656
4.2465	4.3587	4.245	4.2329	4.2218
4.0516	4.3193	4.3159	4.2547	4.2025
4.1302	3.6922	3.5695	3.4323	3.8446
3.8976	4.167	3.9055	4.2766	4.0664
3.9133	4.4224	4.5793	4.4039	4.2278
4.2613	4.2474	4.2283	4.3407	4.2208
4.2097	4.0396	4.3035	4.3006	4.2391
4.1869	4.1141	3.6799	3.5584	3.4221
3.8314	3.8864	3.8738	3.8951	4.2662
4.0559	3.9025	4.412	4.5667	4.3926
4.2158	4.2491	4.2352	4.2161	4.3281
4.1986	4.028	4.2933	4.291	4.2296
4.1774	4.1048	3.6724	3.5508	3.4138
3.8225	3.8768	3.8643	3.8866	4.2598
4.0488	3.8948	4.404	4.5559	4.3807
4.2039	4.2375	4.2236	4.2045	4.3174
4.013	4.1582	4.1008	4.0699	4.0126
3.941	3.5622	3.4856	3.3652	3.6817
3.919	3.8796	3.8689	3.8408	3.9882
3.8422	4.2634	4.3804	4.2649	4.1658
4.2322	4.2068	4.1841	4.1499	4.245
4.1568	4.1083	4.046	3.9595	3.6081
3.5523	3.4576	3.7068	4.1613	4.0575
3.9603	3.9169	4.0035	3.8509	4.777
4.692	4.6135	4.3595	4.3665	4.341
4.3135	4.394	4.098	4.0319	3.9815
3.8941	3.5426	3.4934	3.4053	3.6555
4.0566	4.0354	3.9109	3.8681	3.9539
3.799	4.689	4.6731	4.5605	4.2857
4.3061	4.2817	4.2562	4.3895	3.9855
3.934	3.8465	3.4922	3.4464	3.3618
3.6159	3.9784	3.9365	3.9122	3.825
3.9138	3.757	4.6107	4.6142	4.5232
4.2444	4.2714	4.2479	4.2226	4.326
3.8955	3.8089	3.4498	3.4055	3.3224
3.5831	3.9116	3.8611	3.8233	3.7855
3.8798	3.7219	4.5331	4.56	4.4676
4.1855	4.2155	4.1921	4.1667	4.2725
3.749	3.3984	3.3551	3.2711	3.5257
3.8326	3.7847	3.7438	3.7501	3.8355
3.6762	4.4496	4.4801	4.3948	4.1122
4.1416	4.1182	4.0932	4.1961	3.4456
3.3888	3.3326	3.2133	3.7122	3.7388
3.7436	3.6753	3.5359	3.426	4.4082
4.0149	4.0989	3.7839	3.766	3.7346
3.7134	3.7361	3.3525	3.295	3.1689
3.6378	3.6826	3.6981	3.5499	3.4954
3.3866	4.3095	3.8856	3.9864	3.6879
3.6628	3.6314	3.6109	3.6193	3.2564
3.1196	3.5576	3.6251	3.6555	3.4872
3.3962	3.3425	4.2023	3.7407	3.8596
3.5816	3.5476	3.5168	3.4962	3.4916
3.3599	3.5457	3.5492	3.5452	3.5401
3.5339	3.5294	4.0501	4.1545	4.0942
3.8633	3.879	3.8582	3.8352	3.9115
4.3127	4.0889	3.9327	3.8288	3.7595
3.7022	4.2595	4.2253	4.272	4.1585
4.1233	4.0927	4.0688	3.9914	4.2764
4.0658	3.9217	3.825	3.7497	4.5497
4.4229	4.327	4.1402	4.0738	4.0469
4.0281	3.9809	4.1175	3.9538	3.8408
3.7542	4.3056	4.1923	4.3022	4.1036
4.0575	4.0313	4.0099	3.9866	4.0054
3.86	3.7494	4.1506	4.5022	4.541
4.3694	4.3575	4.3391	4.3199	4.3329
3.8644	3.737	4.0574	4.3059	4.3576
4.1735	4.1586	4.1381	4.1188	4.1276
3.7216	3.9725	4.1591	4.2235	4.0368
4.0183	3.9962	3.9768	3.9782	5.0796
4.7883	4.6545	4.5095	4.4593	4.4429
4.4192	4.5097	4.9294	4.7447	4.5538
4.5927	4.5787	4.5577	4.6769	4.7043
4.524	4.4865	4.4731	4.4516	4.5158
4.4252	4.3813	4.3588	4.3365	4.3291
4.4594	4.427	4.4058	4.3609	4.3957
4.3745	4.3462	4.3539	4.3265	4.4341];

size(r0)

r0= r0';
r0= reshape(r0,[],1);
size(r0)

% r0_temp= r0(1:10);
% size(r0_temp)
% 
% r0= r0_temp;
% NumElements= 4;
% size(r0)



r0_Matrix_upperTriang= tril(ones(NumElements+1),-1);
% r0_Matrix_upperTriang= triu(ones(NumElements+1),1);
% r0= r0';
r0_Matrix_upperTriang(r0_Matrix_upperTriang==1)= r0;
r0_Matrix_upperTriang= r0_Matrix_upperTriang';

r0_Matrix_upperTriang_symmetric= r0_Matrix_upperTriang + r0_Matrix_upperTriang';

size(r0_Matrix_upperTriang)
size(r0_Matrix_upperTriang_symmetric)

% r0_Matrix_lowerTriang= tril(ones(NumElements+1),-1);
r0_Matrix_lowerTriang= triu(ones(NumElements+1),1);
r0_trans= r0';
r0_Matrix_lowerTriang(r0_Matrix_lowerTriang==1)=r0_trans;

% r0_Matrix_lowerTriang= r0_Matrix_lowerTriang';
size(r0_Matrix_lowerTriang)






for i=1:(NumElements+1)
    for j= 1:(NumElements+1)
        if(j>i)
            
            
        end
    end
end







%%